//
// ********************************************************************
// * DISCLAIMER                                                       *
// *                                                                  *
// * The following disclaimer summarizes all the specific disclaimers *
// * of contributors to this software. The specific disclaimers,which *
// * govern, are listed with their locations in:                      *
// *   http://cern.ch/geant4/license                                  *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.                                                             *
// *                                                                  *
// * This  code  implementation is the  intellectual property  of the *
// * GEANT4 collaboration.                                            *
// * By copying,  distributing  or modifying the Program (or any work *
// * based  on  the Program)  you indicate  your  acceptance of  this *
// * statement, and all its terms.                                    *
// ********************************************************************
//
// Jane Tinslay - adapted from A01 example
//
#include "BeamTestEventAction.hh"
#include "BeamTestEmCalorimeterHit.hh"
////////////////////////////////////////////////////////////////////////
// HandsOn4: define Hit of Silicon Monitor

#include "G4Event.hh"
#include "G4HCofThisEvent.hh"
#include "G4SDManager.hh"

BeamTestEventAction::BeamTestEventAction() {}

BeamTestEventAction::~BeamTestEventAction() {}

void BeamTestEventAction::BeginOfEventAction(const G4Event*) 
{
  G4SDManager * SDman = G4SDManager::GetSDMpointer();
  fHitsCollectionID = SDman->GetCollectionID("CalorimeterCollection");

  ////////////////////////////////////////////////////////////////////////
  // HandsOn4: Add Getting code for HitsCollection of Silicon Monitor 
}


void BeamTestEventAction::EndOfEventAction(const G4Event* event)
{

  G4HCofThisEvent *hitsCollectionOfThisEvent = event->GetHCofThisEvent();

  if ( fHitsCollectionID >= 0 )
  {

     BeamTestEmCalorimeterHitsCollection* hitsCollection = 
       dynamic_cast<BeamTestEmCalorimeterHitsCollection*>(hitsCollectionOfThisEvent->GetHC(fHitsCollectionID));
  
     G4double totalEnergy = 0.;
  
     if (0 != hitsCollection) {
        G4int i(0);
    
        for (i=0; i<100; i++) {
           BeamTestEmCalorimeterHit* aHit = (*hitsCollection)[i];   
           totalEnergy += aHit->GetDepositedEnergy();
      
           // aHit->Print();
        }
     }

     G4cout<<"Energy deposited in calorimeter "<<totalEnergy*MeV<<" MeV"<<G4endl;
  }

  ////////////////////////////////////////////////////////////////////////
  // HandsOn4: Add output code of Silicon Monitor Hits

}

